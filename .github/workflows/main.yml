name: Test

on:
  push:
    branches:
      - main
      - staging
      - dev
  pull_request:
    branches:
      - main
      - staging
      - dev

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
          check-latest: true

      - name: Install üß∂
        run: yarn

      - name: Lint üî¨
        run: yarn lint

      - name: Unit tests üß™
        run: yarn test

  validate:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.release.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Validate Release
        uses: sanjP10/release-action@1.0.0
        id: release
        with:
          changelog-file-location: CHANGELOG.md
          operation: validate

  Build:
    name: Build
    if: |
      (github.event_name == 'pull_request' && github.base_ref == 'dev') ||
      (github.event.ref == 'refs/heads/dev' ||
      github.event.ref == 'refs/heads/staging' ||
      github.event.ref == 'refs/heads/main')
    needs:
      - test
      - validate
    runs-on: ubuntu-latest
    steps:
      - run: echo ${{ needs.validate.outputs.version }}
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: limitless86
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push feature ‚è´
        if: github.event_name == 'pull_request' && github.base_ref == 'dev'
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: limitless86/gh-deployments:${{ github.sha }}
      - name: Extract branch name
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Build and push ‚è´
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            limitless86/gh-deployments:${{ github.sha }}
            limitless86/gh-deployments:${{ steps.extract_branch.outputs.branch }}

  DeployDev:
    name: Deploy to Development
    if: github.event_name == 'pull_request' ||
        github.event.ref == 'refs/heads/dev'
    needs:
      - Build
    runs-on: ubuntu-latest
    environment:
      name: development
      url: "http://dev.theodin.co.uk/"
    steps:
      - uses: actions/checkout@v2
      - run: echo "Running kubectl/helm commands with ${GITHUB_SHA} as tag for docker container"

  DeployStaging:
    name: Deploy to Staging
    if: |
      github.event.ref == 'refs/heads/staging' ||
      github.event.ref == 'refs/heads/main'
    needs:
      - Build
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: "http://staging.theodin.co.uk/"

    steps:
      - uses: actions/checkout@v2
      - run: echo "Running kubectl/helm commands with ${GITHUB_SHA} as tag for docker container"

  CreateRelease:
    needs:
      - DeployStaging
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Create Release
        uses: sanjP10/release-action@1.0.0
        id: release
        with:
          changelog-file-location: CHANGELOG.md
          operation: create

  DeployProd:
    name: Deploy to Production
    if: github.event.ref == 'refs/heads/main'
    needs:
      - CreateRelease
    runs-on: ubuntu-latest
    environment:
      name: production
      url: "http://production.theodin.co.uk/"

    steps:
      - uses: actions/checkout@v2
      - run: echo "Running kubectl/helm commands with ${GITHUB_SHA} as tag for docker container"
